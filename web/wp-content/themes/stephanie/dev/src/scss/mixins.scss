/*--------------------------------------------------------------
# Browser vendor prefixes
--------------------------------------------------------------*/
@mixin vendor-prefix($name, $value) {
  @each $vendor in ('-webkit-', '-moz-', '-ms-', '-o-', '') {
    #{$vendor}#{$name}: #{$value};
  }
}

@mixin font-feature-settings($feature-list-one: false, $feature-list-zero: false) {
  // Create an empty list for the standard syntax
  $standard: ();

  // Create an empty list for the old Mozilla syntax
  $old-moz: ();

  // Only proceed if a list of arguments was passed
  @if $feature-list-one {
    // Add each listed feature to the standard and old Mozilla values
    @each $feature in $feature-list-one {
      $standard: append($standard, '#{$feature}' 1, comma);
      $old-moz: append($old-moz, '#{$feature}=1', comma);
    }
  }

  // Only proceed if a list of arguments was passed
  @if $feature-list-zero {
    // Add each listed feature to the standard and old Mozilla values
    @each $feature in $feature-list-zero {
      $standard: append($standard, '#{$feature}' 0, comma);
      $old-moz: append($old-moz, '#{$feature}=0', comma);
    }
  }

  // Finally, print out the prefixed and non-prefixed code for all of the listed features
  -moz-font-feature-settings: $old-moz;
  -moz-font-feature-settings: $standard;
  -o-font-feature-settings: $standard;
  -webkit-font-feature-settings: $standard;
  font-feature-settings: $standard;
}

@mixin flexbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
}

@mixin flex-direction($value: row) {
  @if $value == row-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: horizontal;
  } @else if $value == column {
    -webkit-box-direction: normal;
    -webkit-box-orient: vertical;
  } @else if $value == column-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: vertical;
  } @else {
    -webkit-box-direction: normal;
    -webkit-box-orient: horizontal;
  }
  -webkit-flex-direction: $value;
  -ms-flex-direction: $value;
  flex-direction: $value;
}

@mixin order($int: 0) {
  -webkit-box-ordinal-group: $int + 1;
  -ms-flex-order: $int;
  order: $int;
}

@mixin justify-content($value: flex-start) {
  @if $value == flex-start {
    -webkit-box-pack: start;
    -ms-flex-pack: start;
  } @else if $value == flex-end {
    -webkit-box-pack: end;
    -ms-flex-pack: end;
  } @else if $value == space-between {
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
  } @else if $value == space-around {
    -ms-flex-pack: distribute;
  } @else {
    -webkit-box-pack: $value;
    -ms-flex-pack: $value;
  }
  -webkit-justify-content: $value;
  justify-content: $value;
}

@mixin align-items($value: stretch) {
  @if $value == flex-start {
    -webkit-box-align: start;
    -ms-flex-align: start;
  } @else if $value == flex-end {
    -webkit-box-align: end;
    -ms-flex-align: end;
  } @else {
    -webkit-box-align: $value;
    -ms-flex-align: $value;
  }
  -webkit-align-items: $value;
  align-items: $value;
}

/*--------------------------------------------------------------
# Fonts
--------------------------------------------------------------*/
@mixin simple-font($font-family...) {
  font-family: $font-family;
  @include font-feature-settings(liga kern, calt dlig salt swsh titl);
}

/*--------------------------------------------------------------
# Layout
--------------------------------------------------------------*/
// breakpoints
$S: 320px;
$M: 768px;
$L: 1170px;

// media queries
@mixin MQ($canvas) {
  @if $canvas == S {
    @media only screen and (min-width: $S) {
      @content;
    }
  } @else if $canvas == M {
    @media only screen and (min-width: $M) {
      @content;
    }
  } @else if $canvas == L {
    @media only screen and (min-width: $L) {
      @content;
    }
  }
}

